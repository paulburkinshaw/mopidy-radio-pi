Implementing Radio Pi as a Mopidy Web server extension
******************************************************
The purpose of this doc is to provide a development log of the Radio Pi Mopidy Web server extension
Hopefully this will help other extension developers who want to do something similar

Step 1 - Research & project setup
--------------------------------
- Read through Extension development guide: https://docs.mopidy.com/en/latest/extensiondev/
- Looked at other Web Extensions: https://docs.mopidy.com/en/latest/ext/web/ 
- Installed cookiecutter project template generator on the pi https://github.com/mopidy/cookiecutter-mopidy-ext
	- ran the command cookiecutter https://github.com/mopidy/cookiecutter-mopidy-ext.git
		- filled in relevant info for each question such as dist_name and repo_name
- Created a Git repo from the generated project and uploaded to GitHub: https://github.com/paulburkinshaw/mopidy-radio-pi

Step 2 - Delving into the HTTP server side API  
----------------------------------------------
The Mopidy-HTTP extension comes with an HTTP server to host Mopidy’s HTTP JSON-RPC API (as of Mopidy 0.19). 
This web server can also be used by other extensions that need to expose something over HTTP

The HTTP server side API can be used to:
	- Host static files for e.g. a Mopidy client written in pure JavaScript
	- Host a Tornado application

Step 2.2 - Hosting a static file
--------------------------------
-  Registered an http:static dictionary in the extension registry
	- In ~\mopidy-radio-pi\mopidy_radio_pi\__init__.py setup

Step 2.3 - Hosting a Tornado application
----------------------------------------


Running extension while developing
-----------------------------------
Once your extension is ready to go, to see it in action you’ll need to register it with Mopidy. 
Typically this is done by running python setup.py install from your extension’s Git repo root directory. 
While developing your extension however you can instead run python setup.py develop to effectively link Mopidy directly with your development files.

While being developed the solution files have been dropped into:
	- home/pi/radio-pi-development_version/mopidy-radio-pi 

in ssh navigate to the above path and run sudo python setup.py develop 





